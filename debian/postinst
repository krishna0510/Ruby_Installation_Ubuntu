#!/bin/bash
# postinst script for rvm
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # Run RVM installer
        rvm_path="/usr/share/rvm" && cd $rvm_path/src/rvm && rvm_path="$rvm_path" ./install
        # Load RVM if it is installed, try user then root install.
        if [ -s "/etc/profile.d/rvm.sh" ] 
        then
          source "/etc/profile.d/rvm.sh"
        elif
          [[ -s "$rvm_path/scripts/rvm" ]]
        then
          source "$rvm_path/scripts/rvm"
        elif
          [[ -s "$HOME/.rvm/scripts/rvm" ]]
        then
          true ${rvm_path:="$HOME/.rvm"}
          source "$HOME/.rvm/scripts/rvm"
        fi
        # Add sudoers to rvm group
        users=`awk -F':' '/^sudo/{print $4}' /etc/group`
        IFS=',' read -a array <<< "$users"
        for u in "${array[@]}"
        do
            usermod -a -G rvm $u
            if [ ! -f "/home/$u/.rvmrc" ]; then
                echo "Creating local gemsets for $u"
                su - $u -c 'rvm user gemsets'
            fi
        done
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
